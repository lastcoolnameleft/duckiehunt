# Generated by Django 2.1 on 2018-08-19 05:40

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('activity_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_agent', models.CharField(blank=True, max_length=200, null=True)),
                ('action', models.CharField(blank=True, max_length=10, null=True)),
                ('client_ip', models.PositiveIntegerField(blank=True, null=True)),
                ('duck_id', models.PositiveIntegerField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('comments', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'activity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CiSessions',
            fields=[
                ('session_user_id', models.IntegerField()),
                ('session_id', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('ip_address', models.CharField(max_length=16)),
                ('user_agent', models.CharField(max_length=150)),
                ('last_page', models.CharField(max_length=150)),
                ('last_activity', models.PositiveIntegerField()),
                ('session_data', models.TextField(blank=True, null=True)),
                ('user_data', models.TextField()),
            ],
            options={
                'db_table': 'ci_sessions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ClGroups',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'cl_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ClGroupUri',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_id', models.IntegerField()),
                ('request_uri', models.CharField(max_length=40)),
                ('is_admin', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'cl_group_uri',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ClUserAutologin',
            fields=[
                ('key_id', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('user_id', models.IntegerField()),
                ('user_agent', models.CharField(max_length=150)),
                ('last_ip', models.CharField(max_length=40)),
                ('last_login', models.IntegerField()),
            ],
            options={
                'db_table': 'cl_user_autologin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ClUserProfile',
            fields=[
                ('user_id', models.IntegerField(primary_key=True, serialize=False)),
                ('fullname', models.CharField(blank=True, max_length=50, null=True)),
                ('location', models.CharField(blank=True, max_length=25, null=True)),
                ('website', models.CharField(blank=True, max_length=100, null=True)),
                ('occupation', models.CharField(blank=True, max_length=50, null=True)),
                ('introduction', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cl_user_profile',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ClUsers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_id', models.IntegerField()),
                ('user_ip', models.CharField(max_length=40)),
                ('username', models.CharField(max_length=25, unique=True)),
                ('username_clean', models.CharField(max_length=25)),
                ('password', models.CharField(max_length=34)),
                ('email', models.CharField(max_length=100)),
                ('banned', models.CharField(max_length=1)),
                ('ban_reason', models.CharField(blank=True, max_length=255, null=True)),
                ('login_attempts', models.PositiveIntegerField()),
                ('newpass', models.CharField(blank=True, max_length=34, null=True)),
                ('newpass_key', models.CharField(blank=True, max_length=32, null=True)),
                ('newpass_time', models.DateTimeField(blank=True, null=True)),
                ('active_time', models.PositiveIntegerField()),
                ('last_visit', models.DateTimeField()),
                ('created', models.DateTimeField()),
                ('modified', models.DateTimeField()),
            ],
            options={
                'db_table': 'cl_users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ClUserTemp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_ip', models.CharField(max_length=40)),
                ('username', models.CharField(max_length=255)),
                ('username_clean', models.CharField(max_length=255)),
                ('password', models.CharField(max_length=34)),
                ('email', models.CharField(max_length=100)),
                ('activation_key', models.CharField(max_length=50)),
                ('created', models.DateTimeField()),
            ],
            options={
                'db_table': 'cl_user_temp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Duck',
            fields=[
                ('duck_id', models.IntegerField(primary_key=True, serialize=False)),
                ('create_time', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=128, null=True)),
                ('current_owner_id', models.IntegerField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('total_distance', models.FloatField(blank=True, null=True)),
                ('approved', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'db_table': 'duck',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DuckAssign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duck_id', models.IntegerField()),
                ('user_id', models.IntegerField()),
                ('duck_history_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'duck_assign',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DuckChoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comments', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'duck_choice',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DuckDuck',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
            ],
            options={
                'db_table': 'duck_duck',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DuckHistory',
            fields=[
                ('duck_history_id', models.AutoField(primary_key=True, serialize=False)),
                ('duck_id', models.IntegerField(blank=True, null=True)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('action_id', models.IntegerField(blank=True, null=True)),
                ('timestamp', models.DateTimeField()),
                ('user_ip', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'duck_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DuckHistoryAction',
            fields=[
                ('duck_history_action_id', models.AutoField(primary_key=True, serialize=False)),
                ('action', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'duck_history_action',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DuckLocation',
            fields=[
                ('duck_location_id', models.AutoField(primary_key=True, serialize=False)),
                ('duck_id', models.IntegerField()),
                ('user_id', models.IntegerField()),
                ('link', models.TextField(blank=True, null=True)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('flickr_photo_id', models.BigIntegerField(blank=True, null=True)),
                ('duck_history_id', models.IntegerField(blank=True, null=True)),
                ('date_time', models.DateTimeField(blank=True, null=True)),
                ('location', models.TextField(blank=True, null=True)),
                ('approved', models.CharField(blank=True, max_length=1, null=True)),
                ('distance_to', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'duck_location',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DuckLocationLink',
            fields=[
                ('duck_location_link_id', models.AutoField(primary_key=True, serialize=False)),
                ('duck_location_id', models.IntegerField(blank=True, null=True)),
                ('link', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'duck_location_link',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DuckLocationPhoto',
            fields=[
                ('duck_location_photo_id', models.AutoField(primary_key=True, serialize=False)),
                ('duck_location_id', models.IntegerField(blank=True, null=True)),
                ('flickr_photo_id', models.BigIntegerField(blank=True, null=True)),
                ('flickr_thumbnail_url', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'duck_location_photo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DuckTrack',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('duck_id', models.IntegerField(blank=True, null=True)),
                ('duck_history_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'duck_track',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DuckUser',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'duck_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Groups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('description', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LoginAttempts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.CharField(max_length=15)),
                ('login', models.CharField(max_length=100)),
                ('time', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'login_attempts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Permissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_id', models.IntegerField()),
                ('data', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Roles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent_id', models.IntegerField()),
                ('name', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'roles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserAutologin',
            fields=[
                ('key_id', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('user_id', models.IntegerField()),
                ('user_agent', models.CharField(max_length=150)),
                ('last_ip', models.CharField(max_length=40)),
                ('last_login', models.DateTimeField()),
            ],
            options={
                'db_table': 'user_autologin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('country', models.CharField(blank=True, max_length=20, null=True)),
                ('website', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'user_profile',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.CharField(max_length=45)),
                ('username', models.CharField(blank=True, max_length=100, null=True)),
                ('password', models.CharField(max_length=255)),
                ('salt', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(max_length=100)),
                ('activation_code', models.CharField(blank=True, max_length=40, null=True)),
                ('forgotten_password_code', models.CharField(blank=True, max_length=40, null=True)),
                ('forgotten_password_time', models.PositiveIntegerField(blank=True, null=True)),
                ('remember_code', models.CharField(blank=True, max_length=40, null=True)),
                ('created_on', models.PositiveIntegerField()),
                ('last_login', models.PositiveIntegerField(blank=True, null=True)),
                ('active', models.PositiveIntegerField(blank=True, null=True)),
                ('first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('company', models.CharField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UsersGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'users_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UsersOld',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_id', models.IntegerField()),
                ('username', models.CharField(max_length=25)),
                ('password', models.CharField(max_length=34)),
                ('email', models.CharField(max_length=100)),
                ('banned', models.IntegerField()),
                ('ban_reason', models.CharField(blank=True, max_length=255, null=True)),
                ('newpass', models.CharField(blank=True, max_length=34, null=True)),
                ('newpass_key', models.CharField(blank=True, max_length=32, null=True)),
                ('newpass_time', models.DateTimeField(blank=True, null=True)),
                ('last_ip', models.CharField(max_length=40)),
                ('last_login', models.DateTimeField()),
                ('created', models.DateTimeField()),
                ('modified', models.DateTimeField()),
            ],
            options={
                'db_table': 'users_old',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserTemp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=255)),
                ('password', models.CharField(max_length=34)),
                ('email', models.CharField(max_length=100)),
                ('activation_key', models.CharField(max_length=50)),
                ('last_ip', models.CharField(max_length=40)),
                ('created', models.DateTimeField()),
            ],
            options={
                'db_table': 'user_temp',
                'managed': False,
            },
        ),
    ]
